# Homing Override for dockable probe
[homing_override]
axes: xyz
gcode:
  {% set homing_zhop = 5 %}
  {% set homing_travel_speed = 350 * 60 %}
  {% set homing_travel_accel = 3000 %}
  {% set z_drop_speed = 15 * 60 %}

  {% set x_homing_backoff, y_homing_backoff = -5, -5 %}

  {% set x_position_endstop = printer["configfile"].config["stepper_x"]["position_endstop"]|float %}
  {% set y_position_endstop = printer["configfile"].config["stepper_y"]["position_endstop"]|float %}
  {% set x_position_center = printer.toolhead.axis_maximum.x|int/2 - printer.toolhead.axis_minimum.x|int/2 %}
  {% set y_position_center = printer.toolhead.axis_maximum.y|int/2 - printer.toolhead.axis_minimum.y|int/2 %}


  # reset parameters
  {% set X, Y, Z = False, False, False %}

  # which axes have been requested for homing
  {% if not 'X' in params
    and not 'Y' in params
    and not 'Z' in params %}

    {% set X, Y, Z = True, True, True %}

  {% else %}
    {% if 'X' in params %}
      {% set X = True %}
    {% endif %}

    {% if 'Y' in params %}
      {% set Y = True %}
    {% endif %}

    {% if 'Z' in params %}
      {% set Z = True %}
    {% endif %}

    {% if 'X' in params
      and 'Y' in params
      and 'Z' in params %}
      # reset homing state variables
      # if homing all axes
      _HOMING_VARIABLES reset=1
     {% endif %}

  {% endif %}

  # Set the homing acceleration prior to any movement
  {% set saved_accel = printer.toolhead.max_accel %}
  M204 S{homing_travel_accel}
  BED_MESH_CLEAR
  G90

  {% if Z %}
    {% if ('z' in printer.toolhead.homed_axes) %}
      {% if (printer.toolhead.position.z < homing_zhop) %}
        { action_respond_info("Z too low, performing ZHOP to rehome Z") }
        G91
        G0 Z{homing_zhop} F{z_drop_speed}
        G90
      {% else %}
        { action_respond_info("Z already safe, no ZHOP needed to rehome Z") }
      {% endif %}
    {% elif ('xy' in printer.toolhead.homed_axes) %}
      { action_respond_info("X and Y already homed, no ZHOP needed to home Z") }
    {% else %}
      { action_respond_info("X and Y not homed, forcing full G28 to home Z properly") }
      SET_KINEMATIC_POSITION X=0 Y=0 Z=0
      G0 Z{homing_zhop} F{z_drop_speed}
      {% set X, Y, Z = True, True, True %}
    {% endif %}
  {% endif %}

  {% if Y %} # Home y
    { action_respond_info("Homing Y") }
    G28 Y0
  {% endif %}
  {% if X %} # Home x
    { action_respond_info("Homing X") }
    G28 X0
  {% endif %}

  # Home z
  {% if Z %}
    { action_respond_info("Homing Z") }

    # If there is a bed_mesh enabled and a zero_reference_position set, we retrieve it to home on it
    # Else, we default to the center of the bed
    {% set ZRPx, ZRPy = printer["configfile"].config["bed_mesh"]["zero_reference_position"].split(',')|map('trim')|map('float') %}
    G0 X{ZRPx} Y{ZRPy} F{homing_travel_speed}

    G28 Z0

    G91
    {% if printer["configfile"].settings["stepper_z"]["homing_positive_dir"] == False %}
      G0 Z{homing_zhop} F{z_drop_speed} # small Z hop to avoid grinding the bed (as we should be close to Z0 right now)
    {% elif printer["configfile"].settings["stepper_z"]["homing_positive_dir"] == True %}
      G0 Z-{homing_zhop} F{z_drop_speed} # small Z move in the opposite direction to avoid staying on the endstop (not dangerous since we should be at Z max)
    {% endif %}
    G90
  {% endif %}

  # Reset acceleration values to what it was before
  SET_VELOCITY_LIMIT ACCEL={saved_accel}
